const t=JSON.parse('{"key":"v-604f3c28","path":"/detail/017.html","title":"数字签名","lang":"zh-CN","frontmatter":{"layout":"Detail","title":"数字签名","date":"2024-05-18T00:00:00.000Z","discription":"非对称加密算法简介，非对称加密锁涉及到的算法，如DH、RSA等算法的说明","category":["Cryptography"],"tags":["Cryptography","RSA","DSA","ECDSA"],"description":"简介 带密钥的消息摘要算法。与手写签名类似，起到了抗否认的作用。手写签名针对纸质文件内容确认，数字签名对数据进行摘要处理。如果经过手写签名的文件被修改，该文件无效。同理，经过数字签名的数据，通过验证签名操作辨别该数据是否被修改。如Windows操作系统的产品密钥 数字签名算法包含了公钥和私钥，是非对称加密算法与消息摘要算法的结合体，近似看成是附加了公钥和私钥的消息摘要算法 发送方将发送的数据进行签名处理，发送携带签名的数据。接受方可以验证该签名与数据是否相符来确认数据完整性 用于签名的相关信息私有，用于验证签名的相关信息公有，且必须成对出现。遵循“私钥签名。公钥验证”的签名/验证方式","head":[["meta",{"property":"og:url","content":"https://saynop.github.io/detail/017.html"}],["meta",{"property":"og:title","content":"数字签名"}],["meta",{"property":"og:description","content":"简介 带密钥的消息摘要算法。与手写签名类似，起到了抗否认的作用。手写签名针对纸质文件内容确认，数字签名对数据进行摘要处理。如果经过手写签名的文件被修改，该文件无效。同理，经过数字签名的数据，通过验证签名操作辨别该数据是否被修改。如Windows操作系统的产品密钥 数字签名算法包含了公钥和私钥，是非对称加密算法与消息摘要算法的结合体，近似看成是附加了公钥和私钥的消息摘要算法 发送方将发送的数据进行签名处理，发送携带签名的数据。接受方可以验证该签名与数据是否相符来确认数据完整性 用于签名的相关信息私有，用于验证签名的相关信息公有，且必须成对出现。遵循“私钥签名。公钥验证”的签名/验证方式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Cryptography"}],["meta",{"property":"article:tag","content":"RSA"}],["meta",{"property":"article:tag","content":"DSA"}],["meta",{"property":"article:tag","content":"ECDSA"}],["meta",{"property":"article:published_time","content":"2024-05-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数字签名\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"RSA","slug":"rsa","link":"#rsa","children":[]},{"level":2,"title":"DSA","slug":"dsa","link":"#dsa","children":[{"level":3,"title":"实现流程","slug":"实现流程","link":"#实现流程","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]}]},{"level":2,"title":"ECDSA","slug":"ecdsa","link":"#ecdsa","children":[{"level":3,"title":"密钥长度","slug":"密钥长度","link":"#密钥长度","children":[]},{"level":3,"title":"涉及到的数学内容","slug":"涉及到的数学内容","link":"#涉及到的数学内容","children":[]},{"level":3,"title":"实现流程","slug":"实现流程-1","link":"#实现流程-1","children":[]},{"level":3,"title":"原理","slug":"原理-1","link":"#原理-1","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"detail/017.md","excerpt":"<h2> 简介</h2>\\n<blockquote>\\n<p>带密钥的消息摘要算法。与手写签名类似，起到了抗否认的作用。手写签名针对纸质文件内容确认，数字签名对数据进行摘要处理。如果经过手写签名的文件被修改，该文件无效。同理，经过数字签名的数据，通过验证签名操作辨别该数据是否被修改。如Windows操作系统的产品密钥</p>\\n<p>数字签名算法包含了公钥和私钥，是非对称加密算法与消息摘要算法的结合体，近似看成是附加了公钥和私钥的消息摘要算法</p>\\n<p>发送方将发送的数据进行签名处理，发送携带签名的数据。接受方可以验证该签名与数据是否相符来确认数据完整性\\n用于签名的相关信息私有，用于验证签名的相关信息公有，且必须成对出现。遵循“私钥签名。公钥验证”的签名/验证方式</p>\\n</blockquote>","autoDesc":true}');export{t as data};
