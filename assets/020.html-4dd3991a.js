const t=JSON.parse('{"key":"v-ed78e9e0","path":"/detail/020.html","title":"JS原型链与补环境","lang":"zh-CN","frontmatter":{"layout":"Detail","title":"JS原型链与补环境","date":"2024-12-21T00:00:00.000Z","discription":"JS原型链介绍与补环境的一些通用处理手段","category":["Spider"],"tags":["Spider","Reverse"],"description":"原型 __proto__：在js中，每个实例对象都拥有 __proto__（隐式原型），实例的 __proto__.constructor 指明该实例创建时使用的构造方法 。如下所示 prototype: 函数除了拥有__proto__，还额外拥有prototype（显示原型）","head":[["meta",{"property":"og:url","content":"https://saynop.github.io/detail/020.html"}],["meta",{"property":"og:title","content":"JS原型链与补环境"}],["meta",{"property":"og:description","content":"原型 __proto__：在js中，每个实例对象都拥有 __proto__（隐式原型），实例的 __proto__.constructor 指明该实例创建时使用的构造方法 。如下所示 prototype: 函数除了拥有__proto__，还额外拥有prototype（显示原型）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Spider"}],["meta",{"property":"article:tag","content":"Reverse"}],["meta",{"property":"article:published_time","content":"2024-12-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS原型链与补环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原型","slug":"原型","link":"#原型","children":[]},{"level":2,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":2,"title":"考虑继承关系时声明类","slug":"考虑继承关系时声明类","link":"#考虑继承关系时声明类","children":[]},{"level":2,"title":"原型链检测","slug":"原型链检测","link":"#原型链检测","children":[]},{"level":2,"title":"补环境","slug":"补环境","link":"#补环境","children":[{"level":3,"title":"使用代理明确检测内容","slug":"使用代理明确检测内容","link":"#使用代理明确检测内容","children":[]},{"level":3,"title":"常规处理流程","slug":"常规处理流程","link":"#常规处理流程","children":[]},{"level":3,"title":"结果检测","slug":"结果检测","link":"#结果检测","children":[]}]},{"level":2,"title":"toString检测","slug":"tostring检测","link":"#tostring检测","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"detail/020.md","excerpt":"<h2> 原型</h2>\\n<ul>\\n<li>\\n<p><code>__proto__</code>：在js中，每个实例对象都拥有 <code>__proto__</code>（隐式原型），<strong>实例的 <code>__proto__.constructor</code> 指明该实例创建时使用的构造方法</strong> 。如下所示</p>\\n<p><img src=\\"/assets/imgs/020/01.png\\" alt=\\"proto\\"></p>\\n</li>\\n<li>\\n<p><code>prototype</code>: 函数除了拥有<code>__proto__</code>，还额外拥有<code>prototype</code>（显示原型）</p>\\n<p><img src=\\"/assets/imgs/020/02.png\\" alt=\\"proto\\"></p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
