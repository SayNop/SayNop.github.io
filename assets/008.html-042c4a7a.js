const e=JSON.parse('{"key":"v-2d1dd986","path":"/detail/008.html","title":"Kong与SSO","lang":"zh-CN","frontmatter":{"layout":"Detail","title":"Kong与SSO","date":"2023-06-23T00:00:00.000Z","discription":"通过kong-ingress实现api网关，将主机上所有对外接口通过api网关的过滤实现SSO（单点登录认证）","category":["Kong"],"tags":["Kong","SSO"],"description":"kong的部署与基本配置 本文将以redhat系统为例，实现jwt登陆认证请求通过kong网关进行过滤，服务端无需进行jwt登陆认证校验操作 服务器建立两个无需认证的服务 安装服务运行环境 yum install python3 sudo pip3 install Flask==1.1.4","head":[["meta",{"property":"og:url","content":"https://saynop.github.io/detail/008.html"}],["meta",{"property":"og:title","content":"Kong与SSO"}],["meta",{"property":"og:description","content":"kong的部署与基本配置 本文将以redhat系统为例，实现jwt登陆认证请求通过kong网关进行过滤，服务端无需进行jwt登陆认证校验操作 服务器建立两个无需认证的服务 安装服务运行环境 yum install python3 sudo pip3 install Flask==1.1.4"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-18T06:41:25.000Z"}],["meta",{"property":"article:tag","content":"Kong"}],["meta",{"property":"article:tag","content":"SSO"}],["meta",{"property":"article:published_time","content":"2023-06-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-18T06:41:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kong与SSO\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-18T06:41:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"kong的部署与基本配置","slug":"kong的部署与基本配置","link":"#kong的部署与基本配置","children":[{"level":3,"title":"服务器建立两个无需认证的服务","slug":"服务器建立两个无需认证的服务","link":"#服务器建立两个无需认证的服务","children":[]},{"level":3,"title":"安装Postgresql","slug":"安装postgresql","link":"#安装postgresql","children":[]},{"level":3,"title":"安装Kong","slug":"安装kong","link":"#安装kong","children":[]},{"level":3,"title":"配置与启动","slug":"配置与启动","link":"#配置与启动","children":[]},{"level":3,"title":"kong代理后端服务","slug":"kong代理后端服务","link":"#kong代理后端服务","children":[]}]},{"level":2,"title":"kong日志切分","slug":"kong日志切分","link":"#kong日志切分","children":[]},{"level":2,"title":"kong网关多服务的jwt认证分析","slug":"kong网关多服务的jwt认证分析","link":"#kong网关多服务的jwt认证分析","children":[{"level":3,"title":"建立需要不同用户权限的服务","slug":"建立需要不同用户权限的服务","link":"#建立需要不同用户权限的服务","children":[]},{"level":3,"title":"部署插件","slug":"部署插件","link":"#部署插件","children":[]}]},{"level":2,"title":"插件开发","slug":"插件开发","link":"#插件开发","children":[{"level":3,"title":"框架搭建","slug":"框架搭建","link":"#框架搭建","children":[]},{"level":3,"title":"权限认证","slug":"权限认证","link":"#权限认证","children":[]},{"level":3,"title":"数据库查询","slug":"数据库查询","link":"#数据库查询","children":[]},{"level":3,"title":"账号多登录的判断","slug":"账号多登录的判断","link":"#账号多登录的判断","children":[]}]},{"level":2,"title":"服务端适配","slug":"服务端适配","link":"#服务端适配","children":[{"level":3,"title":"服务端生成token","slug":"服务端生成token","link":"#服务端生成token","children":[]},{"level":3,"title":"服务端对Postgresql的支持","slug":"服务端对postgresql的支持","link":"#服务端对postgresql的支持","children":[]},{"level":3,"title":"SSO服务端的完整代码","slug":"sso服务端的完整代码","link":"#sso服务端的完整代码","children":[]}]},{"level":2,"title":"部署至生产服务器","slug":"部署至生产服务器","link":"#部署至生产服务器","children":[{"level":3,"title":"多服务的多HOST域名部署","slug":"多服务的多host域名部署","link":"#多服务的多host域名部署","children":[]},{"level":3,"title":"多服务的单HOST域名部署","slug":"多服务的单host域名部署","link":"#多服务的单host域名部署","children":[]}]},{"level":2,"title":"插件开发中遇到的问题","slug":"插件开发中遇到的问题","link":"#插件开发中遇到的问题","children":[]}],"git":{"updatedTime":1697611285000,"contributors":[{"name":"SayNop","email":"a2045751@163.com","commits":4}]},"filePathRelative":"detail/008.md","excerpt":"<h2> kong的部署与基本配置</h2>\\n<p>本文将以redhat系统为例，实现jwt登陆认证请求通过kong网关进行过滤，服务端无需进行jwt登陆认证校验操作</p>\\n<h3> 服务器建立两个无需认证的服务</h3>\\n<ul>\\n<li>安装服务运行环境</li>\\n</ul>\\n<div class=\\"macos language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>yum <span class=\\"token function\\">install</span> python3\\n<span class=\\"token function\\">sudo</span> pip3 <span class=\\"token function\\">install</span> <span class=\\"token assign-left variable\\">Flask</span><span class=\\"token operator\\">==</span><span class=\\"token number\\">1.1</span>.4\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
