const e=JSON.parse('{"key":"v-5ce58aea","path":"/detail/015.html","title":"对称加密算法","lang":"zh-CN","frontmatter":{"layout":"Detail","title":"对称加密算法","date":"2024-04-13T00:00:00.000Z","discription":"对称加密算法简介，常见对称加密算法，如DES、AES等算法的说明","category":["Cryptography"],"tags":["Cryptography","DES","AES"],"description":"简介 双方使用相同的密钥对明文进行加解密。常见算法DES，DESede（3DES），AES，IDEA等。优点：计算量小，速度快，效率高。缺点：双方使用相同密钥，安全性难以保证；每对用户使用不同密钥时，在分布式等场景下的密钥管理难度高，使用成本高 填充方式 DES算法以64位（8字节）进行分组加密，对最后一组不足64位的内容，可进行填充处理使其为8字节。常见填充方式如下 NoPadding：不填充 ZerosPadding：0填充 PKCS5Padding：以填充字节数为值对目标字符串进行填充，如 F9 需填充7字节，填充后 F9 07 07 07 07 07 07 07 ）。如果明文最后一组刚好为64位，则需填充一组 08 08 08 08 08 08 08 08 ，且明文长度需要 +8 字节","head":[["meta",{"property":"og:url","content":"https://saynop.github.io/detail/015.html"}],["meta",{"property":"og:title","content":"对称加密算法"}],["meta",{"property":"og:description","content":"简介 双方使用相同的密钥对明文进行加解密。常见算法DES，DESede（3DES），AES，IDEA等。优点：计算量小，速度快，效率高。缺点：双方使用相同密钥，安全性难以保证；每对用户使用不同密钥时，在分布式等场景下的密钥管理难度高，使用成本高 填充方式 DES算法以64位（8字节）进行分组加密，对最后一组不足64位的内容，可进行填充处理使其为8字节。常见填充方式如下 NoPadding：不填充 ZerosPadding：0填充 PKCS5Padding：以填充字节数为值对目标字符串进行填充，如 F9 需填充7字节，填充后 F9 07 07 07 07 07 07 07 ）。如果明文最后一组刚好为64位，则需填充一组 08 08 08 08 08 08 08 08 ，且明文长度需要 +8 字节"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Cryptography"}],["meta",{"property":"article:tag","content":"DES"}],["meta",{"property":"article:tag","content":"AES"}],["meta",{"property":"article:published_time","content":"2024-04-13T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对称加密算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"填充方式","slug":"填充方式","link":"#填充方式","children":[]},{"level":2,"title":"工作模式","slug":"工作模式","link":"#工作模式","children":[]},{"level":2,"title":"DES","slug":"des","link":"#des","children":[]},{"level":2,"title":"DESede","slug":"desede","link":"#desede","children":[]},{"level":2,"title":"AES","slug":"aes","link":"#aes","children":[]},{"level":2,"title":"PEB","slug":"peb","link":"#peb","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"detail/015.md","excerpt":"<h2> 简介</h2>\\n<p>双方使用相同的密钥对明文进行加解密。常见算法DES，DESede（3DES），AES，IDEA等。优点：计算量小，速度快，效率高。缺点：双方使用相同密钥，安全性难以保证；每对用户使用不同密钥时，在分布式等场景下的密钥管理难度高，使用成本高</p>\\n<h2> 填充方式</h2>\\n<p>DES算法以64位（8字节）进行分组加密，对最后一组不足64位的内容，可进行填充处理使其为8字节。常见填充方式如下</p>\\n<ul>\\n<li>NoPadding：不填充</li>\\n<li>ZerosPadding：0填充</li>\\n<li>PKCS5Padding：以填充字节数为值对目标字符串进行填充，如 <code>F9</code> 需填充7字节，填充后 <code>F9 07 07 07 07 07 07 07 </code>）。如果明文最后一组刚好为64位，则需填充一组 <code>08 08 08 08 08 08 08 08</code> ，且明文长度需要 +8 字节</li>\\n</ul>","autoDesc":true}');export{e as data};
