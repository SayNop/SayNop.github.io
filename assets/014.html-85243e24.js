const t=JSON.parse('{"key":"v-5b30b24b","path":"/detail/014.html","title":"消息摘要算法","lang":"zh-CN","frontmatter":{"layout":"Detail","title":"消息摘要算法","date":"2024-04-06T00:00:00.000Z","discription":"消息摘要算法简介，MD5与SHA1算法的说明","category":["Cryptography"],"tags":["Cryptography","MD5","SHA"],"description":"消息摘要算法 消息摘要（Message Digest）是数字签名算法的核心，常用于验证数据完整性，包含MD，SHA，MAC三大种类 java中的equals方法在比较对象时，实际上比较的是两个对象的散列值hashCode()是否相同 任何消息经过散列函数处理后，都会得到唯一的散列值。这一过程称为“消息摘要”，其散列值称为“数字指纹”，自然其算法就是“消息摘要算法” 通过散列函数可获得对应的散列值，但不可通过该散列值反推其原始信息。这是消息摘要算法安全性的根本所在","head":[["meta",{"property":"og:url","content":"https://saynop.github.io/detail/014.html"}],["meta",{"property":"og:title","content":"消息摘要算法"}],["meta",{"property":"og:description","content":"消息摘要算法 消息摘要（Message Digest）是数字签名算法的核心，常用于验证数据完整性，包含MD，SHA，MAC三大种类 java中的equals方法在比较对象时，实际上比较的是两个对象的散列值hashCode()是否相同 任何消息经过散列函数处理后，都会得到唯一的散列值。这一过程称为“消息摘要”，其散列值称为“数字指纹”，自然其算法就是“消息摘要算法” 通过散列函数可获得对应的散列值，但不可通过该散列值反推其原始信息。这是消息摘要算法安全性的根本所在"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Cryptography"}],["meta",{"property":"article:tag","content":"MD5"}],["meta",{"property":"article:tag","content":"SHA"}],["meta",{"property":"article:published_time","content":"2024-04-06T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消息摘要算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-06T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"消息摘要算法","slug":"消息摘要算法","link":"#消息摘要算法","children":[{"level":3,"title":"MD5加密","slug":"md5加密","link":"#md5加密","children":[]},{"level":3,"title":"SHA加密","slug":"sha加密","link":"#sha加密","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"detail/014.md","excerpt":"<h2> 消息摘要算法</h2>\\n<blockquote>\\n<p>消息摘要（Message Digest）是数字签名算法的核心，常用于验证数据完整性，包含MD，SHA，MAC三大种类</p>\\n<p>java中的<code>equals</code>方法在比较对象时，实际上比较的是两个对象的散列值<code>hashCode()</code>是否相同</p>\\n<p>任何消息经过散列函数处理后，都会得到唯一的散列值。这一过程称为“消息摘要”，其散列值称为“数字指纹”，自然其算法就是“消息摘要算法”</p>\\n<p>通过散列函数可获得对应的散列值，但不可通过该散列值反推其原始信息。这是消息摘要算法安全性的根本所在</p>\\n</blockquote>","autoDesc":true}');export{t as data};
